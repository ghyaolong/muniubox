<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.taoding.mapper.menu.MenuDao">
	
	<sql id="menuColumns">
		a.id,
		a.parent_id AS "parent.id",
		a.parent_ids as "parentIds",
		a.name,
		a.href,
		a.target,
		a.icon,
		a.sort,
		a.is_show as "isShow",
		a.permission,
		a.remarks,
		a.create_by AS "createBy.id",
		a.create_date as "createDate",
		a.update_by AS "updateBy.id",
		a.update_date as "updateDate",
		a.del_flag  as "delFlag",
		p.name AS "parent.name"
	</sql>
	
	<sql id="allMenuColumns">
		a.id,
		a.parent_id AS "parent.id",
		a.parent_ids as "parentIds",
		a.name,
		a.href,
		a.target,
		a.icon,
		a.sort,
		a.is_show as "isShow",
		a.platform,
		a.permission,
		a.remarks,
		a.create_by AS "createBy.id",
		a.create_date as "createDate",
		a.update_by AS "updateBy.id",
		a.update_date as "updateDate",
		a.del_flag  as "delFlag"
	</sql>
	<sql id="menu">
		id,
		name,
		href,
		permission
	</sql>
	
	<sql id="menuJoins">
		LEFT JOIN sys_menu p ON p.id = a.parent_id
    </sql>
	
	<select id="get" resultType="Menu">
		SELECT
			<include refid="menuColumns"/>
		FROM sys_menu a
		<include refid="menuJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findAllList" resultType="Menu">
		SELECT
			<include refid="menuColumns"/>
		FROM sys_menu a
		<include refid="menuJoins"/>
	    <if test="null != enterpriseBusinessId and '' !=enterpriseBusinessId">
		JOIN sys_enterprise_menu rm ON rm.menu_id = a.id  AND rm.enterprise_business_id = #{enterpriseBusinessId} 
		</if>
		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
		ORDER BY a.sort
	</select>
	
	<select id="findByParentIdsLike" resultType="Menu">
		SELECT
			a.id,
			a.parent_id AS "parent.id",
			a.parent_ids
		FROM sys_menu a
		<if test="null != enterpriseBusinessId and '' !=enterpriseBusinessId">
		JOIN sys_enterprise_menu rm ON rm.menu_id = a.id  AND rm.enterprise_business_id = #{enterpriseBusinessId} 
		</if>
		WHERE a.del_flag = #{DEL_FLAG_NORMAL} AND a.parent_ids LIKE #{parentIds}
		ORDER BY a.sort
	</select>
	
	<select id="findByUserId" resultType="Menu">
		SELECT DISTINCT
			<include refid="menuColumns"/>
		FROM sys_menu a
		LEFT JOIN sys_menu p ON p.id = a.parent_id
		JOIN sys_role_menu rm ON rm.menu_id = a.id
		JOIN sys_role r ON r.id = rm.role_id AND r.useable='1'
		JOIN sys_user_role ur ON ur.role_id = r.id
		JOIN sys_user u ON u.id = ur.user_id AND u.id = #{userId}
		<if test="null != enterpriseBusinessId and '' !=enterpriseBusinessId">
		JOIN sys_enterprise_menu rem ON rem.menu_id = a.id  AND rem.enterprise_business_id = #{enterpriseBusinessId} 
		</if>
		WHERE a.del_flag = #{DEL_FLAG_NORMAL} AND r.del_flag = #{DEL_FLAG_NORMAL} AND u.del_flag = #{DEL_FLAG_NORMAL} 
		ORDER BY a.sort
	</select>
	
	
	<select id="findByResourceId" resultType="Menu">
		SELECT DISTINCT
			<include refid="menuColumns"/>
		FROM sys_menu a
		LEFT JOIN sys_menu p ON p.id = a.parent_id
		<!-- 角色 -->
		<if test="'1'.toString()==sqlMap.type">
		JOIN sys_role_menu rm ON rm.menu_id = a.id
		JOIN sys_role r ON r.id = rm.role_id AND r.useable='1' AND r.del_flag = #{DEL_FLAG_NORMAL} and r.id=#{sqlMap.resourceId}
		</if>
		<!-- 企业 -->
		<if test="'2'.toString()==sqlMap.type">
		JOIN sys_enterprise_menu rm ON rm.menu_id = a.id  AND rm.enterprise_business_id = #{sqlMap.resourceId} 
		</if>
		WHERE a.del_flag = #{DEL_FLAG_NORMAL}  
		<if test="null !=parentIds and '' !=parentIds">
		and a.parent_ids = #{parentIds}
		</if>
		ORDER BY a.sort
	</select>
	
	<select id="listMenuByUserId" resultType="Menu">
		SELECT 
		  <include refid="menu"/>
		FROM
		  sys_menu AS m 
		  INNER JOIN 
		    (SELECT 
		      menu_id 
		    FROM
		      sys_role_menu rm 
		      INNER JOIN 
		        (SELECT 
		          role_id AS role_id 
		        FROM
		          sys_user_role AS ur 
		          INNER JOIN sys_user AS u 
		            ON ur.user_id = u.id 
		            AND u.id = #{userId}) AS tmp 
		        ON rm.role_id = tmp.role_id) AS otmp 
		    ON m.id = otmp.menu_id
	</select>
	
	<select id="getALLMenu" resultType="Menu">
		SELECT
			<include refid="allMenuColumns"/>
		FROM sys_menu a
		WHERE a.del_flag = 0 
		ORDER BY a.sort
	</select>
	
	<select id="getMenuDetail" resultType="Menu">
		SELECT
			<include refid="allMenuColumns"/>
		FROM sys_menu a
		WHERE a.id = #{menuId}
	</select>
	
	<insert id="insert">
		INSERT INTO sys_menu(
			id, 
			parent_id, 
			parent_ids, 
			name, 
			href, 
			target, 
			icon, 
			sort, 
			is_show,
			platform, 
			permission, 
			create_by, 
			create_date, 
			update_by, 
			update_date, 
			remarks, 
			del_flag
		) VALUES (
			#{id}, 
			#{parent.id}, 
			#{parentIds}, 
			#{name}, 
			#{href}, 
			#{target}, 
			#{icon}, 
			#{sort}, 
			#{isShow},
			#{platform}, 
			#{permission}, 
			#{createBy.id}, 
			#{createDate}, 
			#{updateBy.id}, 
			#{updateDate}, 
			#{remarks}, 
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE sys_menu SET 
			parent_id = #{parent.id}, 
			parent_ids = #{parentIds}, 
			name = #{name}, 
			href = #{href}, 
			target = #{target}, 
			icon = #{icon}, 
			sort = #{sort}, 
			is_show = #{isShow},
			platform = #{platform}, 
			permission = #{permission}, 
			update_by = #{updateBy.id}, 
			update_date = #{updateDate}, 
			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	
	<update id="updateParentIds">
		UPDATE sys_menu SET 
			parent_id = #{parent.id}, 
			parent_ids = #{parentIds}
		WHERE id = #{id}
	</update>
	
	<update id="updateSort">
		UPDATE sys_menu SET 
			sort = #{sort}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE sys_menu SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id} OR parent_ids LIKE 
					<if test="dbName == 'oracle'">'%,'||#{id}||',%'</if>
					<if test="dbName == 'mssql'">'%,'+#{id}+',%'</if>
					<if test="dbName == 'mysql'">CONCAT('%,', #{id}, ',%')</if>
	</update>
	
	<update id="delMenu">
		UPDATE sys_menu SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{menuId} OR parent_ids LIKE CONCAT('%,', #{menuId }, ',%')
	</update>
	<!-- 插入企业模板角色菜单关联表 -->
	<insert id="insertRoleMenuEnterpriseTemplate">
	    INSERT INTO sys_role_menu(
	    				role_id,
	    				menu_id 
 				)
		   SELECT id,menuId	 FROM
		        	(SELECT CONCAT(sr.`id`,#{id})  id,  srm.`menu_id`  menuId
		        	FROM sys_role sr JOIN sys_role_menu srm ON srm.`role_id` = sr.`id`
		            WHERE sr.`enterprise_marking`=#{enterpriseTemplate}) AS role_menu
		 
		 
	</insert>
</mapper>