<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.taoding.mapper.user.SysEnterpriseUserDao">
    
	<sql id="sysEnterpriseUserColumns">
		a.id AS "id",
		a.user_id AS "user.id",
		a.enterprise_id AS "enterpriseId",
		a.defualt_value AS "defualtValue",
		a.office_id AS "office.id",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag",
		u2.name AS "user.name",
		o5.name AS "office.name"
	</sql>
	
	<sql id="sysEnterpriseUserJoins">
		LEFT JOIN sys_user u2 ON u2.id = a.user_id
		LEFT JOIN sys_office o5 ON o5.id = a.office_id
	</sql>
    
	<select id="get" resultType="SysEnterpriseUser">
		SELECT 
			<include refid="sysEnterpriseUserColumns"/>
		FROM sys_enterprise_user a
		<include refid="sysEnterpriseUserJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="SysEnterpriseUser">
		SELECT 
			<include refid="sysEnterpriseUserColumns"/>
		FROM sys_enterprise_user a
		<include refid="sysEnterpriseUserJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="null != user and user.id !=null">
			and a.user_id = #{user.id}
			</if>
			<if test="null != office and office.id !=null">
			and a.office_id = #{office.id}
			</if>
			<if test="null != enterpriseId">
			and a.user_id = #{enterpriseId}
			</if>
			<if test="null != enterpriseMarking and '' !=enterpriseMarking">
				and a.enterprise_id =#{enterpriseMarking}
			</if>		
		</where>
	</select>
	
	<select id="findAllList" resultType="SysEnterpriseUser">
		SELECT 
			<include refid="sysEnterpriseUserColumns"/>
		FROM sys_enterprise_user a
		<include refid="sysEnterpriseUserJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO sys_enterprise_user(
			id,
			user_id,
			enterprise_id,
			defualt_value,
			office_id,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag
		) VALUES (
			#{id},
			#{user.id},
			#{user.enterpriseMarking},
			#{defualtValue},
			#{office.id},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE sys_enterprise_user SET 	
			user_id = #{user.id},
			enterprise_id = #{enterpriseId},
			defualt_value = #{defualtValue},
			office_id = #{office.id},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE sys_enterprise_user SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	<!-- 真实的删除 -->
	<delete id="deleteByUser">
		UPDATE sys_enterprise_user SET 
			del_flag = #{DEL_FLAG_DELETE}
		<where>
		<if test="null != user and null !=user.id">
		 user_id = #{user.id}
		</if>
		</where>
	</delete>
	<!-- 插入企业关联用户表数据 -->
	<insert id="insertSysEnterpriseUser">
	INSERT INTO sys_enterprise_user(
			id,
			user_id,
			enterprise_id,
			defualt_value,
			office_id,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag
		) VALUES 
		<foreach collection="sysEnterpriseUserList" item="item" index="index" separator="," > 
		
		(
			#{item.id}, 
			#{item.user.id}, 
			#{item.enterpriseId}, 
			#{item.defualtValue}, 
			#{item.office.id}, 
			#{item.createBy.id},
			#{item.createDate},
			#{item.updateBy.id},
			#{item.updateDate},
			#{item.remarks},
			#{item.delFlag}
			 
		) 
		</foreach>  
      </insert> 
	
</mapper>