<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.taoding.mapper.salary.CpaSalaryEmployeeDao">
    
	<sql id="cpaSalaryEmployeeColumns">
		a.id AS "id",
		a.employee_no AS "employeeNo",
		a.employee_name AS "employeeName",
		a.gender AS "gender",
		a.department_id AS "departmentId",
		a.position_id AS "positionId",
		a.phone AS "phone",
		a.email AS "email",
		a.hukou AS "hukou",
		a.identity AS "identity",
		a.status AS "status",
		a.on_board_data AS "onBoardData",
		a.bank_id AS "bankId",
		a.export_flag AS "exportFlag",
		a.customer_id AS "customerId",
		a.credit_card AS "creditCard",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag",
		a.individual_tax_levy AS "individualTaxLevy"
	</sql>
	
	<sql id="cpaSalaryEmployeeJoins">
	</sql>
    
  	<!--   根据id查找对象信息	 -->
	<select id="get" resultType="CpaSalaryEmployee">
		SELECT 
			<include refid="cpaSalaryEmployeeColumns"/>
		FROM cpa_salary_employee a
		WHERE a.id = #{id}
		AND a.del_flag = '0'
	</select>
	
	
	<!--根据名字查找对象 -->
	<select id="findByName" resultType="CpaSalaryEmployee">
		SELECT 
			DISTINCT
			a.id,a.employee_name employeeName
		FROM cpa_salary_employee a
		WHERE
			a.del_flag = '0'
		AND
			a.employee_name = #{employeeName}
		AND
			a.customer_id = #{customerId}
	</select>
	
	<!-- 根据employeeNo查询企业员工最大编号 -->
	<select id="findMaxNoByInfoNo" parameterType="string" resultType="string">
		select MAX(employee_no) employeeNo  from cpa_salary_employee where customer_id = #{customerId}
	</select>
	
	<!-- 查询企业的所有员工 -->
	<select id="findList" resultType="CpaSalaryEmployee">
		SELECT 
			<include refid="cpaSalaryEmployeeColumns"/>
		FROM cpa_salary_employee a
		<where>
			a.del_flag = '0'
		AND 
			a.customer_id = #{customerId}
		</where>		
	</select>
	
	<!-- 插入员工信息 -->
	<insert id="insert">
		INSERT INTO cpa_salary_employee(
			id,
			employee_no,
			employee_name,
			gender,
			department_id,
			position_id,
			phone,
			email,
			hukou,
			identity,
			status,
			on_board_data,
			bank_id,
			export_flag,
			customer_id,
			credit_card,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag,
			individual_tax_levy
		) VALUES (
			#{id},
			#{employeeNo},
			#{employeeName},
			#{gender},
			#{departmentId},
			#{positionId},
			#{phone},
			#{email},
			#{hukou},
			#{identity},
			#{status},
			#{onBoardData},
			#{bankId},
			#{exportFlag},
			#{customerId},
			#{creditCard},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag},
			#{individualTaxLevy}
		)
	</insert>
	
	<update id="update">
		UPDATE cpa_salary_employee SET 	
			employee_no = #{employeeNo},
			employee_name = #{employeeName},
			gender = #{gender},
			department_id = #{departmentId},
			position_id = #{positionId},
			phone = #{phone},
			email = #{email},
			hukou = #{hukou},
			identity = #{identity},
			status = #{status},
			on_board_data = #{onBoardData},
			bank_id = #{bankId},
			export_flag = #{exportFlag},
			customer_id = #{customerId},
			credit_card = #{creditCard},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	
	<update id="updateEmployee" >
		UPDATE cpa_salary_employee SET 	
			<if test="employeeNo != null and employeeNo != ''">
				employee_no = #{employeeNo},
			</if>
			<if test="employeeName != null and employeeName != ''">
				employee_name = #{employeeName},
			</if>
			<if test="gender != null">
				gender = #{gender},
			</if>
			<if test="individualTaxLevy != null">
				individual_tax_levy = #{individualTaxLevy},
			</if>
			<if test="departmentId != null and departmentId != ''">
				department_id = #{departmentId},
			</if>
			<if test="positionId != null and positionId != ''">
				position_id = #{positionId},
			</if>
			<if test="phone != null and phone != ''">
				phone = #{phone},
			</if>
			<if test="email != null and email != ''">
				email = #{email},
			</if>
			<if test="hukou != null and hukou != ''">
				hukou = #{hukou},
			</if>
			<if test="identity != null and identity != ''">
				identity = #{identity},
			</if>
			<if test="status != null and status != ''">
				status = #{status},
			</if>
			<if test="onBoardData != null">
				on_board_data = #{onBoardData},
			</if>
			<if test="bankId != null and bankId != ''">
				bank_id = #{bankId},
			</if>
			<if test="exportFlag != null and exportFlag != ''">
				export_flag = #{exportFlag},
			</if>
			<if test="customerId != null and customerId != ''">
				customer_id = #{customerId},
			</if>
			<if test="creditCard != null and creditCard != ''">
				credit_card = #{creditCard},
			</if>
			<if test="updateBy != null and updateBy.id != ''">
				update_by = #{updateBy.id},
			</if>
			<if test="updateDate != null">
				update_date = #{updateDate},
			</if>
			<if test="remarks != null and remarks != ''">
				remarks = #{remarks},
			</if>
			del_flag = '0'
		WHERE id = #{id}
	</update>
	
     <!-- 根据id删除员工 -->
	<update id="delete">
		UPDATE cpa_salary_employee SET 
			del_flag = '1'
		WHERE id = #{id}
	</update>
	
</mapper>